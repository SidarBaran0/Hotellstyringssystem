Sure, you can create a similar page for room service requests. You just need to replace the `MaintenanceTask` class with a `RoomServiceRequest` class and adjust the properties accordingly. Here's how you can do it:

```blazor
@page "/roomservice-requests"

<h1>Room Service Requests</h1>

@if (roomServiceRequests == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>ID</th>
            <th>Room ID</th>
            <th>User ID</th>
            <th>Status</th>
            <th>Notes</th>
            <th>Actions</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var request in roomServiceRequests)
        {
            <tr>
                <td>@request.Id</td>
                <td>@request.RoomId</td>
                <td>@request.UserId</td>
                <td>@request.Status</td>
                <td>@request.Notes</td>
                <td>
                    <button @onclick="() => StartEdit(request)">Edit</button>
                </td>
            </tr>
        }
        </tbody>
    </table>

    @if (isEditing)
    {
        <div>
            <h2>Edit Request</h2>
            <label>Status: <input @bind="editingRequest.Status"/></label>
            <label>Notes: <textarea @bind="editingRequest.Notes"></textarea></label>
            <button @onclick="SaveEdit">Save</button>
            <button @onclick="CancelEdit">Cancel</button>
        </div>
    }
}

@code {
    private List<RoomServiceRequest>? roomServiceRequests;
    private bool isEditing;
    private RoomServiceRequest editingRequest;

    protected override void OnInitialized()
    {
        // This is where you would normally load data from the database.
        // For now, we'll just use some dummy data.
        roomServiceRequests = new List<RoomServiceRequest>
        {
            new RoomServiceRequest { Id = 1, RoomId = 101, UserId = 1, Status = "Pending", Notes = "Need more towels" },
            new RoomServiceRequest { Id = 2, RoomId = 102, UserId = 2, Status = "In Progress", Notes = "Room cleaning" },
            // Add more requests as needed...
        };
    }

    void StartEdit(RoomServiceRequest request)
    {
        editingRequest = request;
        isEditing = true;
    }

    void SaveEdit()
    {
        // Here you would normally save the changes to the database.
        // For now, we'll just update the list in memory.
        isEditing = false;
    }

    void CancelEdit()
    {
        isEditing = false;
    }

    class RoomServiceRequest
    {
        public int Id { get; set; }
        public int RoomId { get; set; }
        public int UserId { get; set; }
        public string Status { get; set; }
        public string Notes { get; set; }
    }

}